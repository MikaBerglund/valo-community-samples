on:
  push:
    branches:
      - master
      - dev

name: Create Sample Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      
      - name: Echo
        run: |
          echo $SOURCE_NAME
          echo $SOURCE_BRANCH
          echo $SOURCE_TAG
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}

      - name: Checkout code
        uses: actions/checkout@v2
        if: "!startsWith(steps.branch_name.outputs.SOURCE_TAG, 'refs/tags/')"

      - name: Install npm dependencies
        run: npm i
        if: "!startsWith(steps.branch_name.outputs.SOURCE_TAG, 'refs/tags/')"

      - name: Install npm dependencies
        run: node .github/scripts/generate-index.js
        if: "!startsWith(steps.branch_name.outputs.SOURCE_TAG, 'refs/tags/')"

      

      - name: Create Release
        id: create_release
        if: "!startsWith(steps.branch_name.outputs.SOURCE_TAG, 'refs/tags/')"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag.outputs.result }}
          release_name: Release ${{ steps.tag.outputs.result }}
          body: |
            Sample release ${{ steps.tag.outputs.result }}
          draft: ${{ github.ref != 'refs/heads/master' }}
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        if: "!startsWith(steps.branch_name.outputs.SOURCE_TAG, 'refs/tags/')"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.json
          asset_name: release.json
          asset_content_type: application/json